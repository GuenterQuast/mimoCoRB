# Configuration for recording two channels with mimoCoRB
#  -----------------------------------------------------
# 
# illustrates the structure of a mimiCoRB setup file:
# the blocks
# - RingBuffer: 
# - Functions:
# must be present.
# The names RB_i and FKT_i with i = 1, 2, 3, ... are fixed. 
# Optionally, a block
# - FunctionConfigs:
# can be specified to provide the configuration for each one of the
# assigned functions. These may also be specified in a separate
# configuration file for all functions, or in dedicated files for
# each function using the keys "config_file:" in the FTK_main section
# or in the FKT_i: sections, respectively. 
#
# In this example, two buffers are configured:
#  - RB_1 for raw waveforms
#  - RB_2 for derived pulse parameters

#  Data from RB_2, the result buffer, are saved to a file in csv (text) format.
#  Data from RB_1 are also passed to an obsever process driving a real-time display,
#  and are also passed to a Reader process driving a real-time histogram display.
#
# Notes:
# 
#    1. additional config files controlling the user functions are
#       located in the subdirectory config/
#
#    2. necessary application-specific user code is located
#       in the subdirectory modules/
#
# ----------------------------------------------------------------------------
#

RingBuffer:
  # define ring buffers
  - RB_1:
      # raw input data buffer (from picoScope, file or simulation)
      number_of_slots: 16
      channel_per_slot: 500
      data_type:
          1: ['chA', "float32"]
          2: ['chB', "float32"]
  - RB_2:
      # buffer with correct signature double pulse parameters
      number_of_slots: 16
      channel_per_slot: 1
      data_type:
      data_type:
          1: ['chA_height', "float32"]
          2: ['chA_position', "int32"]
          3: ['chA_integral', "float32"]
          4: ['chB_height', "float32"]
          5: ['chB_position', "int32"]
          6: ['chB_integral', "float32"]

Functions:
  # define functions and ringbuffer assignment

  - Fkt_main:
       # runtime: 60  # desired runtime in seconds
       runevents: 1000
       config_file: "config/spectrum_config.yaml"

  - Fkt_1:
       ##  for simulation source
       file_name: "modules/simul_source"
       fkt_name: "simulation_source"
       ## for data from file
       #file_name: "modules/file_source"
       #fkt_name: "tar_parquet_source"
       num_process: 1
       RB_assign:
           RB_1: "write"

  - Fkt_2:
      file_name: "modules/exporters"
      # fkt_name: "save_parquet"
      fkt_name: "drain"
      num_process: 1
      RB_assign:
           RB_1: "read"     # waveform to save

  - Fkt_3:
       file_name: "modules/spectrum_filter"
       fkt_name: "find_peaks"
       num_process: 2
       RB_assign:
           RB_1: "read"
           RB_2: "write"

  - Fkt_4:
      file_name: "modules/exporters"
     # fkt_name: "save_to_txt" # save data to text
      fkt_name: "drain"        # no saving of data
      num_process: 1
      RB_assign:
           RB_2: "read"

# --- the following functions are optioal 	   

  - Fkt_5:
      file_name: "modules/plot_waveform"
      fkt_name: "plot_waveform"
      num_process: 1
      RB_assign:
           RB_1: "observe"
  - Fkt_6:
      file_name: "modules/plot_histograms"
      fkt_name: "plot_histograms"
      num_process: 1
      RB_assign:
           RB_2: "read"  # pulse parameters
